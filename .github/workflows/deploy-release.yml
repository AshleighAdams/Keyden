name: Release

on:
  release:
    types:
      - published

defaults:
  run:
    shell: bash

jobs:
  build:
    name: "Build ${{ matrix.rid }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
        - rid: win-x64
          os: windows-latest
          project: src/Keyden.Desktop.Windows
          installer-arch: x64
        - rid: win-arm64
          os: windows-latest
          project: src/Keyden.Desktop.Windows
          installer-arch: arm64
        - rid: linux-x64
          os: ubuntu-latest
          project: src/Keyden.Desktop.Unix
        # - rid: linux-arm64
        #   os: ubuntu-latest
        #   project: src/Keyden.Desktop.Unix
        - rid: osx-x64
          os: macos-13
          project: src/Keyden.Desktop.Unix
        # - rid: osx-arm64
        #   os: macos-13
        #   project: src/Keyden.Desktop.Unix
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '1'
        submodules: recursive

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Setup Verlite
      run: |
        #verlite_version="$(dotnet msbuild Directory.Build.props -getitem:PackageReference | jq -r '.Items.PackageReference[] | select(.Identity=="Verlite.MsBuild") .Version')"
        verlite_version="2.5.0"
        dotnet tool install --global Verlite.CLI --version "$verlite_version"
        verlite . --enable-shadow-repo --auto-fetch --verbosity verbatim

    - name: Build bins
      run: |
        dotnet publish "${project}" --configuration Release -r "${rid}" -o "artifacts-publish"
        mkdir artifacts
        cd artifacts-publish
        rm *.pdb || true
        rm *.dbg || true
        rm *.xml || true
        if [[ "$RUNNER_OS" == "Windows" ]]; then
            7z a "../artifacts/Keyden-${rid}.zip" .
        else
            7za a "../artifacts/Keyden-${rid}.zip" .
        fi
      env:
        rid: ${{ matrix.rid }}
        project: ${{ matrix.project }}

    - name: Build installer
      if: ${{ matrix.installer-arch != '' }}
      run: |
        version=$(verlite . --enable-shadow-repo)
        cd src/Keyden.Installer.Windows
        ./InnoSetup/ISCC.exe Keyden.iss -DVersion="$version" -DArch=$arch -DArtifactsDir=../../artifacts-publish -FKeydenSetup-$arch -O../../artifacts
      env:
        arch: ${{ matrix.installer-arch }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: artifacts-${{ matrix.rid }}
        if-no-files-found: error
        path:  |
          artifacts/*

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Upload release
      run: |
        set -x
        tag="${GITHUB_REF#refs/*/}"
        files=()

        IFS=$'\n';
        for asset in $(find ./artifacts); do
          files+=("$asset")
        done

        gh release upload "$tag" "${files[@]}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
