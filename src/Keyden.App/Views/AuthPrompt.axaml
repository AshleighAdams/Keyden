<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="https://github.com/projektanker/icons.avalonia"
        xmlns:views="clr-namespace:Keyden.Views"
        mc:Ignorable="d"
        Width="350" MinHeight="150"
        Padding="20"
        SizeToContent="Height"
        x:Class="Keyden.Views.AuthPrompt"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="AuthPrompt"
        CanResize="False"
        WindowStartupLocation="CenterScreen"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="-1"
        TransparencyLevelHint="Mica,AcrylicBlur,Blur"
        Background="Transparent"
        Topmost="True"
        ShowActivated="True">
  <Panel Name="RootPanel">
    
    <ExperimentalAcrylicBorder IsHitTestVisible="False" Margin="-24" Name="Acrylic">
      <ExperimentalAcrylicBorder.Material>
        <ExperimentalAcrylicMaterial
            BackgroundSource="Digger"
            FallbackColor="{DynamicResource Color.Window}"
            TintColor="{DynamicResource Color.Window.AltGlass}"
            TintOpacity="{DynamicResource Color.Window.AltGlass.TintOpacity}"
            MaterialOpacity="{DynamicResource Color.Window.AltGlass.MaterialOpacity}" />
      </ExperimentalAcrylicBorder.Material>
    </ExperimentalAcrylicBorder>
    
    <StackPanel Spacing="12">
      <TextBlock Text="Key access requested"
                 TextAlignment="Center"
                 FontSize="21"
                 Margin="0,8,0,0"/>

      <TextBlock FontSize="16"
                 FontWeight="Normal"
                 TextAlignment="Center"
                 TextWrapping="Wrap"
                 Margin="0,8">
        Allow
        <Run FontWeight="SemiBold" Text="{Binding AppName}"/>
        to use the key
      </TextBlock>
      
      <Border Name="KeyBackground"
              CornerRadius="8"
              BorderBrush="{DynamicResource Brush.Auth.Key.Border}"
              BorderThickness="1"
              Classes.hoverxxx="{Binding RelativeSource=KeyTitleBar.IsPointerOver}">
        <StackPanel>
          <Border Name="KeyTitleBar"
                  Background="Transparent"
                  Padding="12,10"
                  CornerRadius="8"
                  IsHitTestVisible="True">
            <StackPanel Orientation="Horizontal" Spacing="8">
              <Border Name="Chevron" Classes="chevron">
                <i:Icon Value="fa-chevron-right" FontSize="10" Opacity="0.5" />
              </Border>
              <views:KeyIcon />
              <TextBlock Text="{Binding Key.Name}"
                         FontWeight="SemiBold"
                         VerticalAlignment="Center"/>
            </StackPanel>
          </Border>

          <StackPanel Name="Resizer" ClipToBounds="True" MaxHeight="0">
            <ScrollViewer Name="CollapsableContent" MaxHeight="150">
              <SelectableTextBlock FontSize="4"
                                   Margin="12,0,12,12"
                                   TextWrapping="Wrap">
                <Run Text="Process user" FontWeight="Bold" FontSize="12"/>
                <LineBreak/>
                <Run Text="{Binding AppUser}" FontSize="12"/>
                <LineBreak/>
                <LineBreak/>
                <Run Text="Process hierarchy" FontWeight="Bold" FontSize="12"/>
                <LineBreak/>
                <Run Text="{Binding ProcessHierarchy}" FontSize="12"/>
              </SelectableTextBlock>
            </ScrollViewer>
          </StackPanel>
        </StackPanel>
      </Border>

      <TextBox Name="Pin"
               IsVisible="True"
               Watermark="Enter PIN"
               PasswordChar="â€¢"
               HorizontalAlignment="Stretch" />
    
      <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Spacing="5">
        <Button Name="DenyButton"
                Classes="deny"
                HotKey="Escape">
          Cancel
        </Button>
        <Button Name="AuthButton"
                Classes="confirm"
                HotKey="Enter"
                IsEnabled="{Binding AuthButtonEnabled}">
          <Button.Content>
            <StackPanel Orientation="Horizontal">
              <i:Icon Value="{Binding AuthButtonIcon}"
                      IsVisible="{Binding AuthButtonIconVisible}"
                      Animation="{Binding AuthButtonIconAnimation}"
                      Foreground="{DynamicResource Color.Foreground}" />
              <TextBlock Text="{Binding AuthButtonText}" />
            </StackPanel>
          </Button.Content>
        </Button>
      </StackPanel>
    </StackPanel>
  </Panel>

  <Window.Styles>

    <Style Selector="Border#KeyBackground">
      <Setter Property="Background" Value="{DynamicResource Brush.Auth.Key.Background}"/>
    </Style>
    <Style Selector="Border.hoverxxx#KeyBackground">
      <Setter Property="Background" Value="{DynamicResource Brush.Key.Hover}"/>
    </Style>
    
    <Style Selector="Border.chevron">
      <Setter Property="Transitions">
        <Transitions>
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" Easing="CubicEaseInOut"/>
        </Transitions>
      </Setter>

      <Style Selector="^">
        <Setter Property="RenderTransform" Value="rotate(0deg)"/>
      </Style>
      <Style Selector="^.rotate">
        <Setter Property="RenderTransform" Value="rotate(90deg)"/>
      </Style>
    </Style>
    

    <Style Selector="Button.confirm">
      <Setter Property="Background" Value="{DynamicResource Brush.ConfirmButton.Background}"/>
      <Setter Property="Foreground" Value="{DynamicResource Brush.ConfirmButton.Foreground}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="FontWeight" Value="Normal"/>
      <Setter Property="BorderBrush" Value="{DynamicResource Brush.ConfirmButton.Border}"/>

      <Style Selector="^:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource Brush.ConfirmButton.Background.Hover}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.ConfirmButton.Foreground}"/>
      </Style>
      <Style Selector="^:pressed /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource Brush.ConfirmButton.Background.Press}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.ConfirmButton.Foreground}"/>
      </Style>
    </Style>

    <Style Selector="Button.deny">
      <Setter Property="Background" Value="{DynamicResource Brush.DenyButton.Background}"/>
      <Setter Property="Foreground" Value="{DynamicResource Brush.DenyButton.Foreground}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="FontWeight" Value="Normal"/>
      <Setter Property="BorderBrush" Value="{DynamicResource Brush.DenyButton.Border}"/>

      <Style Selector="^:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource Brush.DenyButton.Background.Hover}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.DenyButton.Foreground}"/>
      </Style>
      <Style Selector="^:pressed /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource Brush.DenyButton.Background.Press}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.DenyButton.Foreground}"/>
      </Style>
    </Style>
    
  </Window.Styles>
</Window>
