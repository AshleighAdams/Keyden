<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="https://github.com/projektanker/icons.avalonia"
             xmlns:views="clr-namespace:KeyWarden.Views"
             mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="100"
             x:Class="KeyWarden.Views.TabItem">

  <Grid RowDefinitions="*,*">
    <Button Grid.Row="0"
            Name="TheButton"
            HorizontalAlignment="Stretch">
      <Grid ColumnDefinitions="16,12,*">

        <Border Grid.Column="0" Classes="icon">
          <i:Icon Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:TabItem}}, Path=Icon}"
                  Foreground="{DynamicResource Color.Sidebar.Foreground}" />
        </Border>
      
        <TextBlock Grid.Column="2"
                   Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:TabItem}}, Path=Text}"
                   VerticalAlignment="Center"
                   FontSize="13"/>
      </Grid>

      <Button.Styles>
        <Style Selector="views|TabItem Button">
          <Setter Property="Padding" Value="10"/>
          <Setter Property="Background" Value="Transparent"/>

          <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource Brush.Sidebar.Hover}"/>
          </Style>

          <Style Selector="^:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource Brush.Sidebar.Selected}"/>
          </Style>
        </Style>

        <Style Selector="views|TabItem:not(.subtle):selected Button /template/ ContentPresenter">
          <Setter Property="Background" Value="{DynamicResource Brush.Sidebar.Selected}"/>
        </Style>

        <Style Selector="views|TabItem i|Icon">
          <Setter Property="FontSize" Value="16"/>
          <Setter Property="Foreground" Value="{DynamicResource Color.Sidebar.Foreground}"/>
        </Style>

        <Style Selector="views|TabItem TextBlock">
          <Setter Property="Foreground" Value="{DynamicResource Color.Sidebar.Foreground}"/>
        </Style>
        
        <Style Selector="views|TabItem.subtle TextBlock">
          <Setter Property="Foreground" Value="{DynamicResource Color.Button.Foreground}"/>
        </Style>
        <Style Selector="views|TabItem.subtle i|Icon">
          <Setter Property="Opacity" Value="0.6"/>
          <Setter Property="FontSize" Value="12"/>
          <Setter Property="Foreground" Value="{DynamicResource Color.Button.Foreground}"/>
        </Style>
        
        <Style Selector="views|TabItem.subtle Border.icon">
          <Setter Property="RenderTransform" Value="rotate(0deg)"/>

          <Setter Property="Transitions">
            <Transitions>
              <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1"/><!-- Easing="Linear"-->
            </Transitions>
          </Setter>
        </Style>
        <Style Selector="views|TabItem.subtle[IsExpanded=True] Border.icon">
          <Setter Property="RenderTransform" Value="rotate(90deg)"/>
        </Style>

      </Button.Styles>
    </Button>

    <ContentPresenter Grid.Row="1"
                      Name="PART_ContentPresenter"
                      IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:TabItem}}, Path=IsExpanded}"
                      Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:TabItem}}, Path=ExpandableContent}"/>
  </Grid>
</UserControl>
